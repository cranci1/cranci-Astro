---
interface Props {
    repo: string;
}

const { repo } = Astro.props;

let data = null;

async function fetchRepoData() {
    const response = await fetch(`https://api.github.com/repos/${repo}`);
    data = await response.json();
}

await fetchRepoData();

function getLanguageColor(language) {
    const colors = {
        TypeScript: "#2b7489",
        JavaScript: "#f1e05a",
        Java: "#b07219",
        Go: "#00ADD8",
        Python: "#3572A5",
        Swift: "#ffac45",
        default: "#ccc"
    };

    return colors[language] || colors.default;
}
---

<style>
    .projects {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        color: white;
    }

    .link-card {
        background-color: #282828;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        display: flex;
        flex-direction: column;
        text-decoration: none;
        color: inherit;
        position: relative;
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .link-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
    }

    .header {
        display: flex;
        align-items: center;
        padding: 16px;
        position: relative;
    }

    .avatar {
        border-radius: 50%;
        width: 24px;
        height: 24px;
        margin-right: 8px;
    }

    .info {
        flex-grow: 1;
    }

    .owner {
        margin: 0;
        font-size: 12px;
        color: #888;
    }

    .owner-container {
        display: flex;
        align-items: center;
        position: absolute;
        top: 8px;
        left: 8px;
    }

    h2 {
        margin: 20px 0 0px;
        font-size: 18px;
        color: white;
    }

    .description {
        margin: 0;
        font-size: 14px;
        color: #ccc;
    }

    .footer {
        display: flex;
        justify-content: space-between;
        padding: 16px;
        background-color: #1f1f1f;
        font-size: 14px;
    }

    .language {
        display: flex;
        align-items: center;
    }

    .language-color {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        display: inline-block;
        margin-right: 8px;
    }

    .stars {
        color: #ffab00;
    }
</style>

<div class="projects">
    <li class="link-card">
        {data ? (
            <a href={data.html_url} target="_blank" rel="noopener noreferrer">
                <div class="header">
                    <div class="owner-container">
                        <img src={data.owner.avatar_url} alt={data.owner.login} class="avatar" />
                        <p class="owner">{data.owner.login}</p>
                    </div>
                    <div class="info">
                        <h2>{data.name}</h2>
                        <p class="description">{data.description}</p>
                    </div>
                </div>
                <div class="footer">
                    <span class="language">
                        <span class="language-color" style={`background-color: ${getLanguageColor(data.language)};`}></span>
                        {data.language}
                    </span>
                    <span class="stars">‚≠ê {data.stargazers_count}</span>
                </div>
            </a>
        ) : (
            <p>Loading...</p>
        )}
    </li>
</div>
